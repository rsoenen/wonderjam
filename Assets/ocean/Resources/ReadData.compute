
//NOTE - Not every kernel has been tested

int _Width;
int _Height;
Texture2D _Tex2D;
Texture3D _Tex3D;

//-----------------------------------------------------------------------//

//-- read from 1 channel 2D render texture --//

#pragma kernel read2DC1

RWStructuredBuffer<float> _Buffer2DC1;

[numthreads(8,8,1)]
void read2DC1(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width;

    _Buffer2DC1[idx] = _Tex2D[id.xy].x;

}

//-- read from 2 channel 2D render texture --//

#pragma kernel read2DC2

RWStructuredBuffer<float2> _Buffer2DC2;

[numthreads(8,8,1)]
void read2DC2(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width;

    _Buffer2DC2[idx] = _Tex2D[id.xy].xy;

}

//-- read from 3 channel 2D render texture --//

#pragma kernel read2DC3

RWStructuredBuffer<float3> _Buffer2DC3;

[numthreads(8,8,1)]
void read2DC3(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width;

    _Buffer2DC3[idx] = _Tex2D[id.xy].xyz;

}

//-- read from 4 channel 2D render texture --//

#pragma kernel read2DC4

RWStructuredBuffer<float4> _Buffer2DC4;

[numthreads(8,8,1)]
void read2DC4(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width;

    _Buffer2DC4[idx] = _Tex2D[id.xy];

}

//-----------------------------------------------------------------------//

//-- read from 1 channel 3D render texture --//

#pragma kernel read3DC1

RWStructuredBuffer<float> _Buffer3DC1;

[numthreads(8,8,8)]
void read3DC1(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width + id.z * _Width * _Height;

    _Buffer3DC1[idx] = _Tex3D[id].x;

}

//-- read from 2 channel 3D render texture --//

#pragma kernel read3DC2

RWStructuredBuffer<float2> _Buffer3DC2;

[numthreads(8,8,8)]
void read3DC2(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width + id.z * _Width * _Height;

    _Buffer3DC2[idx] = _Tex3D[id].xy;

}

//-- read from 3 channel 3D render texture --//

#pragma kernel read3DC3

RWStructuredBuffer<float3> _Buffer3DC3;

[numthreads(8,8,8)]
void read3DC3(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width + id.z * _Width * _Height;

    _Buffer3DC3[idx] = _Tex3D[id].xyz;

}

//-- read from 4 channel 3D render texture --//

#pragma kernel read3DC4

RWStructuredBuffer<float4> _Buffer3DC4;

[numthreads(8,8,8)]
void read3DC4(uint3 id : SV_DispatchThreadID)
{

    int idx = id.x + id.y * _Width + id.z * _Width * _Height;

    _Buffer3DC4[idx] = _Tex3D[id];

}
